#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('app:server');
var http = require('http');
var bcrypt =  require('bcryptjs');
const DB_URL = process.env.DB_URL;



const dbName = 'iyfdb';
const dbClient = require('mongodb').MongoClient;

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  dbClient.connect(DB_URL, function(err, client) {
    if (err) {
      debug("Failed to connect to the database", err);
    }
    db = client.db(dbName);
    db.collection("devotees").createIndex(
       { contact: 1, course:1, "attendance.date": 1 } )

    pass = bcrypt.hashSync('gaurnitai', 10)
    db.collection("devotees").find(
      {username:'admin'})
    .toArray(function(err, dvData) {
      if (err) {
       console.log("err is ", err);
      }else{
        if(dvData.length == 0){
        db.collection("devotees")
        .insertOne({username:'admin', password:pass}, 
        function(err, createRes) {
            if (err) {
               console.log("err is ", err);
            }else{
              console.log("Seed data added");
            }
        });
      }else{
        console.log("already have seed");
      }
     }
    });

    app.locals.db = db;
    var addr = server.address();
    var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
    debug('Listening on ' + bind);
  });
  
}
